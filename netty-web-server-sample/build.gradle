buildscript {
	ext {
		springBootVersion = '2.7.18'
	}
	repositories {
		mavenLocal()
        maven { url "https://mirrors.huaweicloud.com/repository/maven"}
        maven { url "https://mirrors.cloud.tencent.com/nexus/repository/maven-public"}
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/public" }
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-milestone' }
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'war'

description = 'netty-mvc-rest sample'
archivesBaseName = 'netty-web-server-sample'
version="$buildVersion"

sourceSets {
  test {
    java.srcDirs = ['src/test/java']
    java.outputDir = file('build/classes/test')
    output.resourcesDir = file('build/classes/test')
    resources.srcDirs = ['src/test/resources']
  }
}



dependencies {
    implementation project(":netty-mvc-web");
    ////implementation 'com.github.tigershi:spring-boot-netty-http-web:netty-mvc-web:v2.0.0'
    implementation ("io.netty:netty-all:$nettyVersion")
    implementation ("io.netty:netty-transport-native-epoll:$nettyVersion:linux-x86_64")
    implementation("io.netty.incubator:netty-incubator-transport-native-io_uring:$io_uringVersion:linux-x86_64")

    implementation("com.alibaba:fastjson:$fasterjsonVersion")
    implementation("org.slf4j:slf4j-api:$slf4jApi")
    implementation('org.springframework.boot:spring-boot-autoconfigure')
    implementation ('org.springframework.boot:spring-boot-starter-log4j2')
}